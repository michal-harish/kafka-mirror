environment = dev
graphite.host = graphite.visualdna.com

resolver.class = net.imagini.kafka.DestinationResolver

producer.zk.connect = hq-gsantoro-d01:2181
producer.zk.connectiontimeout.ms = 10000
#we don't need big batches on mirror because we're near the destination brokers
producer.producer.type = async
producer.queue.time = 50
producer.batch.size = 1
producer.compression.codec = 1
#we want blocking producer so when brokers can't keep up we don't drop messages
producer.queue.enqueueTimeout.ms = -1

#consumer.1.zk.connect = hq-mharis-d02:2181
#consumer.1.zk.connectiontimeout.ms = 5000
#consumer.1.topics.whitelist = tracking_events
#consumer.1.backoff.increment.ms = 250
#consumer.1.groupid = central-mirror-dev

#consumer.2.zk.connect=zookeeper-01.prod.visualdna.com,zookeeper-02.prod.visualdna.com,zookeeper-03.prod.visualdna.com
#consumer.2.zk.connectiontimeout.ms=5000
#consumer.2.groupid=central-mirror-dev
#consumer.2.topics.whitelist=adviews|adclicks|pageviews|conversions|datasync|useractivity
#consumer.2.backoff.increment.ms=250

consumer.3.zk.connect=zookeeper-01.stag.visualdna.com:2181,zookeeper-02.stag.visualdna.com:2181,zookeeper-03.stag.visualdna.com:2181
consumer.3.zk.connectiontimeout.ms=5000
consumer.3.groupid=central-mirror-dev
consumer.3.topics.whitelist=adviews
consumer.3.backoff.increment.ms=250

#consumer.11.zk.connect = eu-events-p01:2181,eu-events-p03:2181
#consumer.11.zk.connectiontimeout.ms = 5000
#consumer.11.topics.whitelist = tracking_events
#consumer.11.groupid = central-mirror-dev
#consumer.11.backoff.increment.ms = 250

#consumer.12.zk.connect = eu-events-p02:2181,eu-events-p04:2181
#consumer.12.zk.connectiontimeout.ms = 5000
#consumer.12.topics.whitelist = tracking_events
#consumer.12.backoff.increment.ms = 250
#consumer.12.groupid = central-mirror-dev


